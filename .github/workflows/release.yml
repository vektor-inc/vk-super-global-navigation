name: Deploy to VWS
on:
    push:
        tags:
            - '[0-9]+.[0-9]+.[0-9]+'

env:
    plugin_name: vk-super-global-navigation

jobs:
    php_unit:
        name: php unit test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php:  ['7.4', '8.0', '8.1']
        services:
            mysql:
                image: mysql:5.7
                ports:
                    - 3306
                env:
                    MYSQL_ROOT_PASSWORD: wordpress
                    MYSQL_DATABASE: wordpress
                    MYSQL_USER: wordpress
                    MYSQL_PASSWORD: wordpress
        steps:
            - uses: actions/checkout@v4
            - name: Read .node-version
              run: echo "##[set-output name=NODEVERSION;]$(cat .node-version)"
              id: nodenv
            - name: Setup Node.js (.node-version)
              uses: actions/setup-node@v4
              with:
                  node-version: '${{ steps.nodenv.outputs.NODEVERSION }}'
            - name: Cache multiple paths
              uses: actions/cache@v3
              with:
                  path: vendor
                  key: ${{ runner.os }}-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
            - name: Setup PHP ${{ matrix.php }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
            - name: install npm scripts
              run: npm install
            - name: Install Composer Packages
              run: composer install
            - name: Install WP-CLI
              run: |
                  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                  chmod +x wp-cli.phar
                  mv wp-cli.phar /usr/local/bin/wp
            - name: Build
              run: npm run build
            - name: Start Environment
              run: npx wp-env start
            - name: Run PHP Unit Test
              run: npm run phpunit
    release:
        runs-on: ubuntu-latest
        needs: [php_unit]
        steps:
            - uses: actions/checkout@v4
            - name: Read .node-version
              run: echo "##[set-output name=NODEVERSION;]$(cat .node-version)"
              id: nodenv
            - name: Setup Node.js (.node-version)
              uses: actions/setup-node@v4
              with:
                  node-version: '${{ steps.nodenv.outputs.NODEVERSION }}'
            - name: Setup PHP 7.4
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
            - name: Install NPM Scripts
              run: npm install
            - name: Install Composer Packages
              run: composer install
            - name: Install WP-CLI
              run: |
                  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                  chmod +x wp-cli.phar
                  mv wp-cli.phar /usr/local/bin/wp
            - name: Build
              run: npm run build
            - name: Make Distribution
              run: |
                  npm run dist
                  cd dist/ && zip -r ${{ env.plugin_name }}.zip ${{ env.plugin_name }}/ && mv ${{ env.plugin_name }}.zip ${GITHUB_WORKSPACE}
            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v3
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ env.plugin_name }}.zip
                  asset_name: ${{ env.plugin_name }}.zip
                  asset_content_type: application/zip
